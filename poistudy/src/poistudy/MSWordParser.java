package poistudy;

import java.io.FileOutputStream;
import java.util.List;

import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

public class MSWordParser {
	
	public String getWordContent(String inputFile){
		String content ="";
		try{
			OPCPackage opackage = OPCPackage.open(inputFile);
			XWPFWordExtractor extractor = new XWPFWordExtractor(opackage);
			content = extractor.getText();
		}catch(Exception e){
			e.printStackTrace();
		}
		return content;
	}
	
	public String[] getWordParagraphs(String inputFile){
		String lines[] = null;
		try{
			OPCPackage opackage = OPCPackage.open(inputFile);
			XWPFDocument document = new XWPFDocument(opackage);
			List<XWPFParagraph> paragraphs = document.getParagraphs();
			lines = new String[paragraphs.size()];
			int i = 0;
			for(XWPFParagraph para: paragraphs){
				lines[i++] = para.getText();
				System.out.println(para.getText());
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		return lines;
	}
	
	public void craeteMSWord(String outputFile, String... contents){
		try{
			XWPFDocument document = new XWPFDocument();
			
			for(String text: contents){
				XWPFParagraph paragraph = document.createParagraph();
				paragraph.setAlignment(ParagraphAlignment.LEFT);
				XWPFRun run = paragraph.createRun();
				run.setText(text);
			}
			
			createSampleTable(document);
			
			/**
			 * Below line code is to add a piece of code "<main:sectPr/>" into CTDocument
			 * Without it, NullPointerException occurs when extracting content of the 
			 * file generated by POI. It should be a potential defect of POI
			 */
			document.getDocument().getBody().addNewSectPr();
			
			FileOutputStream fos = new FileOutputStream(outputFile);
			document.write(fos);
			fos.close();
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	private void createSampleTable(XWPFDocument document){
		XWPFTable table = document.createTable(3, 3); 
		XWPFTableRow rows = null;
		XWPFTableCell cell = null;
		for (int i = 0; i < 3; i++) {
			rows = table.getRow(i);
			for (int j = 0; j < 3; j++) {
				cell = rows.getCell(j);
				cell.setText("row " + i + " col " + j);
			}
		}
	}
	
	public static void main(String args[]){
		MSWordParser wordParser = new MSWordParser();
		String inputFile = "d:\\test.docx";
		String[] contents = new String[]{
			"Hello guys,",
			"This is a demo application to create a .docx file and retrieve content from the file.",
			"Enjoy it!"
		};
		wordParser.craeteMSWord(inputFile, contents);
		wordParser.getWordParagraphs(inputFile);
		System.out.println(wordParser.getWordContent(inputFile));
	}
}
